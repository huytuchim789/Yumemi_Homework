{"version":3,"sources":["components/CityPicker/CityPicker.jsx","components/Chart/Chart.jsx","layouts/footer/footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["CityPicker","prefectures","onCheckBox","onCheckBoxCity","e","name","target","status","checked","className","map","prefecture","type","id","prefCode","onChange","prefName","protoTypes","PropTypes","array","isRequired","func","Chart","creatEmptyData","data","i","splice","console","log","useState","JSON","parse","localStorage","getItem","series","setSeries","useEffect","length","d","value","filter","serie","setItem","stringify","Highcharts","chart","height","styledMode","title","text","yAxis","xAxis","accessibility","rangeDescription","legend","layout","align","verticalAlign","plotOptions","label","connectorAllowed","pointStart","Date","UTC","pointInterval","responsive","rules","condition","minHeight","minWidth","chartOptions","highChartRender","Footer","props","href","rel","App","setPrefectures","axios","method","url","headers","then","res","result","forEach","populationTotal","p","src","element","prefecturesCopy","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fe8b82c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './CityPicker.css'\r\nfunction CityPicker ({ prefectures, onCheckBox }) {\r\n  const onCheckBoxCity = (e) => {\r\n    // console.log(e.target.checked);\r\n    onCheckBox({ name: e.target.name, status: e.target.checked })\r\n    // onCheckBox(e.target.checked);\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      {prefectures\r\n        ? prefectures.map((prefecture) => {\r\n          return (\r\n              <label className=\"city-name\" key={prefecture.prefCode}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id={prefecture.prefCode}\r\n                  onChange={onCheckBoxCity}\r\n                  name={prefecture.prefName}\r\n                  // element={prefecture}\r\n                />\r\n                <span>{prefecture.prefName}</span>\r\n              </label>\r\n          )\r\n        })\r\n        : null}\r\n    </div>\r\n  )\r\n}\r\nCityPicker.protoTypes = {\r\n  prefectures: PropTypes.array.isRequired,\r\n  onCheckBox: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CityPicker\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Chart.css'\r\nimport Highcharts from 'highcharts'\r\n\r\nChart.propTypes = {}\r\n\r\nfunction Chart ({ prefectures }) {\r\n  function creatEmptyData () {\r\n    const array = { data: [] }\r\n    for (let i = 0; i < 17; i++) {\r\n      array.data.splice(0, 0, null)\r\n    }\r\n    console.log(array)\r\n    return array\r\n  }\r\n  const [series, setSeries] = useState(\r\n    JSON.parse(localStorage.getItem('series'))\r\n  )\r\n  useEffect(() => {\r\n    if (prefectures.length > 0) {\r\n      let series = prefectures.map((prefecture) => {\r\n        if (prefecture.status) {\r\n          return {\r\n            name: prefecture.prefName,\r\n            data: prefecture.data[0].data.map((d) => d.value)\r\n          }\r\n        } else {\r\n          return null\r\n        }\r\n      })\r\n      series = series.filter((serie) => serie != null)\r\n      setSeries(series)\r\n      localStorage.setItem('series', JSON.stringify(series))\r\n    }\r\n  }, [prefectures])\r\n  useEffect(() => {\r\n    setSeries(series)\r\n    highChartRender(series)\r\n  }, [series])\r\n\r\n  function highChartRender (series) {\r\n    Highcharts.chart('container', {\r\n      chart: {\r\n        height: (9 / 16) * 100 + '%', // 16:9 ratio\r\n        styledMode: true\r\n      },\r\n\r\n      title: {\r\n        text: '日本の行政単位による人口の変化'\r\n      },\r\n\r\n      yAxis: {\r\n        title: {\r\n          text: '人口'\r\n        }\r\n      },\r\n\r\n      xAxis: {\r\n        accessibility: {\r\n          rangeDescription: 'Range: 2010 to 2017'\r\n        },\r\n        type: 'datetime'\r\n      },\r\n\r\n      legend: {\r\n        layout: 'vertical',\r\n        align: 'right',\r\n        verticalAlign: 'middle'\r\n      },\r\n\r\n      plotOptions: {\r\n        series: {\r\n          label: {\r\n            connectorAllowed: false\r\n          },\r\n          pointStart: Date.UTC(1960),\r\n          pointInterval: 31556952000 * 5 // 5 year to milliseconds\r\n        }\r\n      },\r\n\r\n      series: series || [creatEmptyData],\r\n\r\n      responsive: {\r\n        rules: [\r\n          {\r\n            condition: {\r\n              minHeight: 2000,\r\n              minWidth: 2000\r\n            },\r\n            chartOptions: {\r\n              legend: {\r\n                layout: 'horizontal',\r\n                align: 'center',\r\n                verticalAlign: 'bottom'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <figure className=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n      </figure>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chart\r\n","import React from 'react'\r\nimport './styles.css'\r\n\r\nFooter.propTypes = {}\r\n\r\nfunction Footer (props) {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"social\">\r\n        <a href=\"https://www.instagram.com/huy_tu24/\" target=\"_blank\" rel=\"noreferrer\">\r\n          <i className=\"fab fa-instagram\"></i>\r\n        </a>\r\n        <a href=\"#\" target=\"_blank\">\r\n          <i className=\"fab fa-twitter\"></i>\r\n        </a>\r\n        <a href=\"https://www.facebook.com/tu.huy.3705/\" target=\"_blank\" rel=\"noreferrer\">\r\n          <i className=\"fab fa-facebook-f\"></i>\r\n        </a>\r\n      </div>\r\n      <ul className=\"list\">\r\n        <li>\r\n          <a href=\"#\">Home</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"\">Services</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"\">About</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"\">Term</a>\r\n        </li>\r\n      </ul>\r\n      <p className=\"copyright\">Yumemi Developers 2021</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState, useEffect } from 'react'\nimport CityPicker from './components/CityPicker/CityPicker'\nimport './App.css'\nimport axios from 'axios'\nimport Chart from './components/Chart/Chart'\nimport Footer from './layouts/footer/footer'\n\nApp.propTypes = {}\n\nfunction App (props) {\n  const [prefectures, setPrefectures] = useState([])\n\n  useEffect(() => {\n    axios({\n      method: 'get',\n      url: 'https://opendata.resas-portal.go.jp/api/v1/prefectures',\n      headers: { 'X-API-KEY': 'X8oPp2Dc2IA8GOzI0yyirpVnHlIREMAPCwc5l0HP' }\n    }).then((res) => {\n      const prefectures = [...res.data.result]\n      prefectures.forEach((prefecture) => {\n        axios({\n          method: 'get',\n          url: `https://opendata.resas-portal.go.jp/api/v1/population/composition/perYear?cityCode=-&prefCode=${prefecture.prefCode}`,\n          headers: {\n            'X-API-KEY': 'X8oPp2Dc2IA8GOzI0yyirpVnHlIREMAPCwc5l0HP'\n          }\n        }).then((res) => {\n          const populationTotal = [\n            ...res.data.result.data.filter((p) => p.label === '総人口')\n          ]\n          prefecture.data = populationTotal\n          prefecture.status = false\n        })\n      })\n      setPrefectures(prefectures)\n    })\n  }, [])\n\n  useEffect(() => {\n    setPrefectures(prefectures)\n  }, [prefectures])\n\n  function onCheckBox (element) {\n    const prefecturesCopy = [...prefectures]\n    console.log(element.name, element.status)\n    prefecturesCopy.forEach((prefecture) => {\n      if (prefecture.prefName === element.name) {\n        element.status\n          ? (prefecture.status = true)\n          : (prefecture.status = false)\n      }\n    })\n    setPrefectures(prefecturesCopy)\n  }\n  return (\n    <div className=\"app\">\n      <img\n        src=\"https://www.yumemi.co.jp/images/logo_yumemi_02.svg\"\n        className=\"logo\"\n      />\n      <CityPicker prefectures={prefectures} onCheckBox={onCheckBox} />\n      <Chart prefectures={prefectures} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}